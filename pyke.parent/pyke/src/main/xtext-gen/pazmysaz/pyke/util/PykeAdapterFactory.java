/**
 * generated by Xtext 2.25.0
 */
package pazmysaz.pyke.util;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.common.notify.impl.AdapterFactoryImpl;

import org.eclipse.emf.ecore.EObject;

import pazmysaz.pyke.*;

/**
 * <!-- begin-user-doc -->
 * The <b>Adapter Factory</b> for the model.
 * It provides an adapter <code>createXXX</code> method for each class of the model.
 * <!-- end-user-doc -->
 * @see pazmysaz.pyke.PykePackage
 * @generated
 */
public class PykeAdapterFactory extends AdapterFactoryImpl
{
  /**
   * The cached model package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static PykePackage modelPackage;

  /**
   * Creates an instance of the adapter factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public PykeAdapterFactory()
  {
    if (modelPackage == null)
    {
      modelPackage = PykePackage.eINSTANCE;
    }
  }

  /**
   * Returns whether this factory is applicable for the type of the object.
   * <!-- begin-user-doc -->
   * This implementation returns <code>true</code> if the object is either the model's package or is an instance object of the model.
   * <!-- end-user-doc -->
   * @return whether this factory is applicable for the type of the object.
   * @generated
   */
  @Override
  public boolean isFactoryForType(Object object)
  {
    if (object == modelPackage)
    {
      return true;
    }
    if (object instanceof EObject)
    {
      return ((EObject)object).eClass().getEPackage() == modelPackage;
    }
    return false;
  }

  /**
   * The switch that delegates to the <code>createXXX</code> methods.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected PykeSwitch<Adapter> modelSwitch =
    new PykeSwitch<Adapter>()
    {
      @Override
      public Adapter caseDashboard(Dashboard object)
      {
        return createDashboardAdapter();
      }
      @Override
      public Adapter caseTrendSummary(TrendSummary object)
      {
        return createTrendSummaryAdapter();
      }
      @Override
      public Adapter caseDistributionSummary(DistributionSummary object)
      {
        return createDistributionSummaryAdapter();
      }
      @Override
      public Adapter caseLabelSummary(LabelSummary object)
      {
        return createLabelSummaryAdapter();
      }
      @Override
      public Adapter caseIdentity(Identity object)
      {
        return createIdentityAdapter();
      }
      @Override
      public Adapter caseReport(Report object)
      {
        return createReportAdapter();
      }
      @Override
      public Adapter caseSection(Section object)
      {
        return createSectionAdapter();
      }
      @Override
      public Adapter defaultCase(EObject object)
      {
        return createEObjectAdapter();
      }
    };

  /**
   * Creates an adapter for the <code>target</code>.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param target the object to adapt.
   * @return the adapter for the <code>target</code>.
   * @generated
   */
  @Override
  public Adapter createAdapter(Notifier target)
  {
    return modelSwitch.doSwitch((EObject)target);
  }


  /**
   * Creates a new adapter for an object of class '{@link pazmysaz.pyke.Dashboard <em>Dashboard</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see pazmysaz.pyke.Dashboard
   * @generated
   */
  public Adapter createDashboardAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link pazmysaz.pyke.TrendSummary <em>Trend Summary</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see pazmysaz.pyke.TrendSummary
   * @generated
   */
  public Adapter createTrendSummaryAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link pazmysaz.pyke.DistributionSummary <em>Distribution Summary</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see pazmysaz.pyke.DistributionSummary
   * @generated
   */
  public Adapter createDistributionSummaryAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link pazmysaz.pyke.LabelSummary <em>Label Summary</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see pazmysaz.pyke.LabelSummary
   * @generated
   */
  public Adapter createLabelSummaryAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link pazmysaz.pyke.Identity <em>Identity</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see pazmysaz.pyke.Identity
   * @generated
   */
  public Adapter createIdentityAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link pazmysaz.pyke.Report <em>Report</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see pazmysaz.pyke.Report
   * @generated
   */
  public Adapter createReportAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link pazmysaz.pyke.Section <em>Section</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see pazmysaz.pyke.Section
   * @generated
   */
  public Adapter createSectionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for the default case.
   * <!-- begin-user-doc -->
   * This default implementation returns null.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @generated
   */
  public Adapter createEObjectAdapter()
  {
    return null;
  }

} //PykeAdapterFactory
